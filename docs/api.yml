openapi: 3.0.0
info:
  title: MOCBOT API
  description: |-
    This document outlines the specifications behind the MOCBOT API

    Some useful links:
    - The [MOCBOT API](https://github.com/MasterOfCubesAU/mocbot-api) repository
  contact:
    email: masterofcubesau@gmail.com
  version: 1.0.0
externalDocs:
  description: Find out more about MOCBOT
  url: https://mocbot.masterofcubesau.com
servers:
  - url: https://api.masterofcubesau.com/v1
tags:
  - name: User XP
    description: User XP operations
  - name: Guild XP
    description: Guild XP operations
  - name: User Warnings
    description: User Warning operations
  - name: Guild Warnings
    description: Guild Warning operations
  - name: Settings
    description: Guild Settings operations
  - name: Warnings
    description: General Warning operations
paths:
  /xp/{guild_id}:
    get:
      tags:
        - Guild XP
      summary: Fetches XP data for a guild
      description: |-
        This route fetches all XP data for a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to fetch XP data for
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuildXP"
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
    delete:
      tags:
        - Guild XP
      summary: Remove all XP for a given guild
      description: |-
        This route removes all XP data for a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to remove
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
  /xp/{guild_id}/{user_id}:
    post:
      tags:
        - User XP
      summary: Creates a new XP object
      description: |-
        This route creates a new XP object for a user
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID the user belongs to
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID of the new user
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
    get:
      tags:
        - User XP
      summary: Fetches an existing XP object
      description: |-
        This route fetches XP data for a user in a guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to fetch XP data from
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID you would like to fetch XP data for
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserXP"
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild/User ID not found
    patch:
      tags:
        - User XP
      summary: Updates an existing XP object
      description: |-
        This route updates an existing XP object for a user
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID the user belongs to
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID of the user
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild/User ID not found
    delete:
      tags:
        - User XP
      summary: Removes an existing XP object
      description: |-
        This route removes an existing XP object for a user
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID the user belongs to
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID of the user
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild/User ID not found
  /settings/{guild_id}:
    post:
      tags:
        - Settings
      summary: Creates a configuration entry for a server
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to create settings for
      requestBody:
        description: The settings to add for this guild
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Settings"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyObject"
        "400":
          description: Settings was not provided
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "409":
          description: Settings for the guild already exist
    get:
      tags:
        - Settings
      summary: Fetches the current configuration for a server
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to fetch settings for
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Settings"
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
    patch:
      tags:
        - Settings
      summary: Updates an existing configuration for a server
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to update settings for
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
    delete:
      tags:
        - Settings
      summary: Removes a configuration entry for a server
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to remove settings for
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
  /warnings/{guild_id}:
    get:
      tags:
        - Guild Warnings
      summary: Fetches server related warnings
      description: |-
        This route fetches all warnings for a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to fetch warning data for
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuildWarnings"
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
    delete:
      tags:
        - Guild Warnings
      summary: Removes all server related warnings
      description: |-
        This route removes all warnings for a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to remove warning data for
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild ID not found
  /warnings/{guild_id}/{user_id}:
    post:
      tags:
        - User Warnings
      summary: Creates a warning object
      description: |-
        This route creates a new warning for a user in a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID the user is from
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID of the user
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild/User ID not found
    get:
      tags:
        - User Warnings
      summary: Fetches user warnings from a guild
      description: |-
        This route fetches all warnings for a user in a given guild
      parameters:
        - name: guild_id
          in: path
          schema:
            type: integer
          required: true
          description: The Guild ID you would like to fetch warning data from
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          description: The User ID you would like to fetch warning data for
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWarnings"
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Guild/User ID not found
  /warnings/{warning_id}:
    delete:
      tags:
        - Warnings
      summary: This route will delete a given warning
      parameters:
        - name: warning_id
          in: path
          schema:
            type: string
          required: true
          description: The Warning ID you would like to delete
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/components/responses/NotAuthorized'
        "404":
          description: Warning ID not found
components:
  responses:
    NotAuthorized:
      description: You are not authorized to access this resource
  securitySchemes:
    APIKey:       
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY
  schemas:
    GuildXP:
      type: array
      items:
        type: object
        properties:
          UserGuildID:
            type: integer
            description: The UserGuildID
          XP:
            type: integer
            description: The current XP value
          Level:
            type: integer
            description: The current level
          XPLock:
            type: string
            format: date-time
            description: The time until this user can gain XP from messages
          VoiceChannelXPLock:
            type: string
            format: date-time
            description: The time until this user can gain XP from voice activity
    UserXP:
      type: object
      properties:
        UserGuildID:
          type: integer
          description: The UserGuildID
        XP:
          type: integer
          description: The current XP value
        Level:
          type: integer
          description: The current level
        XPLock:
          type: string
          format: date-time
          description: The time until this user can gain XP from messages
        VoiceChannelXPLock:
          type: string
          format: date-time
          description: The time until this user can gain XP from voice activity
    GuildWarnings:
      type: array
      items:
        type: object
        properties:
          WarningID:
            type: string
            format: uuid
            description: The Warning ID
          UserGuildID:
            type: integer
            description: The UserGuildID
          Reason:
            type: string
            description: The reason behind the warning
          Time:
            type: string
            format: date-time
            description: The time the user was warned
          AdminID:
            type: integer
            description: The ID of the administrator who distributed the warning
    UserWarnings:
      type: object
      properties:
        WarningID:
          type: string
          format: uuid
          description: The Warning ID
        UserGuildID:
          type: integer
          description: The UserGuildID
        Reason:
          type: string
          description: The reason behind the warning
        Time:
          type: string
          format: date-time
          description: The time the user was warned
        AdminID:
          type: integer
          description: The ID of the administrator who distributed the warning
    Settings:
      type: object
      example:
        setting_1: true
        setting_2: false
        setting_3: {}
    EmptyObject:
      type: object
security:
  - APIKey: []     # use the same name as under securitySchemes

